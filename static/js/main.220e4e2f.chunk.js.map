{"version":3,"sources":["config/axios.config.js","features/auth/authSlice.js","utils/cookies.js","features/auth/auth.js","assets/gurzuLogo.svg","features/user/userDetailSlice.js","component/Header.js","component/Message.js","features/rootSlice.js","pages/authPages/LoginPage.js","component/SideBar.js","component/ProtectedRoute.js","utils/theme.js","component/Table.js","features/allUser/allUserSlice.js","features/attendance/attendanceSlice.js","pages/adminPages/UserDetail.js","assets/404.jpg","pages/pages/Notfound.js","pages/adminPages/Attendance.js","features/request/requestSlice.js","assets/401.jpg","pages/pages/Unauthorized.js","pages/adminPages/Dashboard.js","pages/adminPages/Requests.js","pages/adminPages/Employees.js","pages/adminPages/UserForm.js","pages/adminPages/RequestView.js","features/holiday/holidaySlice.js","features/holiday/HolidayItem.js","features/holiday/HolidayList.js","features/holiday/AddHoliday.js","pages/userPages/Dashboard.js","pages/userPages/Attendance.js","pages/userPages/Requests.js","pages/userPages/UserProfile.js","pages/userPages/RequestForm.js","pages/userPages/RequestView.js","features/resetPassword/resetPasswordSlice.js","pages/authPages/ForgotPasswordPage.js","pages/authPages/ResetPasswordPage.js","App.js","app/store.js","index.js"],"names":["axiosInstance","axios","create","baseURL","fetchAuth","createAsyncThunk","payload","a","post","userData","data","response","status","headers","request","message","reducer","createSlice","name","initialState","loading","errorMessage","reducers","extraReducers","pending","state","action","fulfilled","error","errors","title","rejected","getCookie","cname","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","setCookie","cvalue","expirationTime","d","Date","setTime","getTime","expires","toUTCString","auth","login","attributes","callback","auth_token","role","id","logout","isAuthenticated","fetchCurrentUser","AUTHTOKEN","defaults","common","get","fetchUserDetail","postNewUser","rejectWithValue","updateExistingUser","url","user","patch","deleteUser","delete","result","userDetailSlice","currentUserData","resetUserDetail","actions","Header","dispatch","this","props","Box","sx","width","position","AppBar","color","Toolbar","flexGrow","src","gurzuLogo","alt","IconButton","onClick","history","push","Logout","Component","connect","userDetail","Message","values","severity","display","Alert","bottom","right","zIndex","variant","root","setState","validationSchema","yup","email","required","password","min","LoginPage","useState","messageVisibility","setMessageVisibility","useDispatch","useSelector","formik","useFormik","initialValues","onSubmit","unwrap","then","promiseResult","height","Container","maxWidth","flexDirection","justifyContent","alignItem","mt","Paper","elevation","p","handleSubmit","Stack","direction","spacing","alignItems","TextField","margin","label","value","onChange","handleChange","touched","Boolean","helperText","type","Button","size","m","href","SideBar","adminNavLinks","icon","text","People","Storage","HolidayVillage","userNavLinks","Person","navLinks","bgcolor","minHeight","List","ListItem","ListItemText","Typography","Divider","map","element","index","ListItemButton","toLowerCase","replace","ListItemIcon","ProtectedRoute","component","rest","render","to","pathname","from","location","theme","createTheme","palette","primary","main","contrastText","secondary","dark","light","gray","gradientCollection","TablePaginationActions","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","event","disabled","Math","ceil","max","CustomPaginationActionsTable","React","setPage","setRowsPerPage","rows","columns","fields","buttons","emptyRows","TableContainer","Table","minWidth","TableHead","TableRow","field","TableCell","align","toUpperCase","TableBody","slice","row","columnIndex","scope","button","buttonIndex","background","transform","RemoveRedEye","Edit","Delete","approval_status","style","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","fetchAllUsers","allUsers","mapIdToName","forEach","elem","getStartTimer","getAllAttendance","allAttendance","getAttendance","getUserAttendance","attendance","postAttendance","patchAttendance","attId","deleteAttendance","allAttendanceData","attendanceResult","clockout","UserDetail","clockOut","list","latestAttendance","clock_out","userId","match","params","userDetails","messageTitle","messageSeverity","setTimeout","attendanceList","leave_status","clock_in","user_id","allUser","KeyboardReturn","Avatar","orientation","padding","gender","salary","marginBottom","marginLeft","promiseHandler","console","log","Notfound","backgroundColor","image","Attendance","JSON","stringify","getAllRequest","getRequest","getMyRequest","getUserRequest","postRequest","patchRequest","requestId","approveRequest","rejectRequest","allRequestData","requestResult","myRequestData","Dashboard","totalEmployees","userHash","todayAttendance","absentToday","pendingRequest","noOfRequest","date","today","getFullYear","getMonth","getDate","filter","att_date","border","flexWrap","Card","CardContent","CardMedia","Icon","SupervisorAccount","filterByPendingRequest","subheader","ListSubheader","filterByAbsentToday","item","textDecoration","remarks","Requests","requestList","approved_by","Employees","employeeList","method","path","validationSchemaPost","contact","validationSchemaPatch","UserForm","setMessage","setMessageSeverity","useHistory","existingUser","toString","parseFloat","code","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","RequestView","requestDetail","lineHeight","getHolidays","getHoliday","deleteHoliday","postHoliday","patchHoliday","holidayId","holidaySlice","allHolidayData","holidayResult","HolidayItem","holiday","mb","descriptions","CardActions","HolidayList","useEffect","AddHoliday","setTitle","description","setDescription","setDate","e","preventDefault","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newValue","renderInput","marginTop","marginRight","maxHeight","overflow","inOutToggle","Request","requestData","goBack","RequestForm","existingRequest","setFrom","setTo","setRemarks","multiline","mx","postEmail","err","patchPassword","ForgotPasswordPage","token","ResetPasswordPage","App","changeView","admin","exact","UserDashBoard","AdminDashBoard","AdminUserDetail","UserProfile","AdminUserForm","UserAttendance","AdminAttendance","AdminEmployees","UserLeave","AdminLeave","UserRequestView","AdminRequestView","AdminHolidayPage","AdminHolidayForm","store","configureStore","authReducer","allUserReducer","userDetailReducer","resetPassword","resetPasswordReducer","attendanceReducer","requestReducer","holidayReducer","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.220e4e2f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"https://nameless-sands-43248.herokuapp.com/api/v1/\",\r\n})\r\n\r\nexport {axiosInstance};","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\n\r\nexport const fetchAuth = createAsyncThunk(\r\n    \"post/login\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"login\";\r\n            const userData = await axiosInstance.post(url, payload)\r\n            return [{ ...userData.data[\"data\"] }, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                return [null, error.request]\r\n            } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                return [null, error.message]\r\n            }\r\n        };\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    userData: {},\r\n    errorMessage: \"\"\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers: {\r\n        [fetchAuth.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [fetchAuth.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [data, error] = action.payload;\r\n            if (error) {\r\n                state.errorMessage = error.data.errors[0].title;\r\n            } else {\r\n                state.userData = { ...data };\r\n                state.errorMessage = \"\";\r\n            }\r\n        },\r\n        [fetchAuth.rejected]: (state, action) => {\r\n            state.error = action.payload\r\n            state.loading = false;\r\n        }\r\n    }\r\n})\r\n\r\nconst { reducer } = authSlice;\r\nexport default reducer;","export const getCookie = (cname) => {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport const setCookie = (cname, cvalue, expirationTime=0) => {\r\n    if(expirationTime !== 0 ){\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + (expirationTime * 60 * 1000));\r\n    let expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }else{\r\n        document.cookie = cname + \"=\" + cvalue;\r\n    }\r\n}\r\n\r\n","import { getCookie, setCookie } from '../../utils/cookies';\r\n\r\n\r\n\r\nconst auth = {\r\n    login:(attributes,callback) => {\r\n        setCookie(\"token\", attributes.auth_token, 400);\r\n        setCookie(\"role\",attributes.role, 400);\r\n        setCookie(\"userId\", attributes.id, 400);\r\n        callback();\r\n    },\r\n\r\n    logout:(callback) => {\r\n        setCookie(\"token\", \"\");\r\n        setCookie(\"role\", \"\");\r\n        setCookie(\"userId\", \"\",)\r\n        callback();\r\n    },\r\n\r\n    isAuthenticated:(callback) => {\r\n        return getCookie(\"token\") && true;\r\n    }\r\n}\r\n\r\n\r\nexport default auth;","export default __webpack_public_path__ + \"static/media/gurzuLogo.706ca432.svg\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\n\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n    \"get/currentUser/\",\r\n    async () => {\r\n        try {\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const userData = await axiosInstance.get(`profile`)\r\n            return [userData.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const fetchUserDetail = createAsyncThunk(\r\n    \"get/user/\",\r\n    async (payload) => {\r\n        try {\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const userData = await axiosInstance.get(`users/${payload}`)\r\n            return [userData.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const postNewUser = createAsyncThunk(\r\n    \"post/users\",\r\n    async (payload, { rejectWithValue }) => {\r\n        try {\r\n            const url = \"/users\"\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const userData = await axiosInstance.post(url, payload);\r\n            return [userData.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport const updateExistingUser = createAsyncThunk(\r\n    \"patch/user\",\r\n    async (payload) => {\r\n        try {\r\n            const url = `/users/${payload.user.id}`\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const userData = await axiosInstance.patch(url, payload.user);\r\n            return [userData.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n    \"delete/user\",\r\n    async (payload) => {\r\n        try {\r\n            const url = `users/${payload}`\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.delete(url);\r\n            return [result.data, null];\r\n        }catch(error){\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\nconst initialState = {\r\n    currentUserData: {},\r\n    data: {},\r\n    loading: false,\r\n    error: \"\",\r\n}\r\nconst userDetailSlice = createSlice({\r\n    initialState,\r\n    name: \"userDetail\",\r\n    reducers: {\r\n        resetUserDetail: (state) => {\r\n            state.currentUserData = {};\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchCurrentUser.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [fetchCurrentUser.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [userData, error] = action.payload\r\n            if (!error) {\r\n                state.currentUserData = userData.data;\r\n            } else {\r\n                state.error = error.message;\r\n            }\r\n        },\r\n        [fetchCurrentUser.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        [fetchUserDetail.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [fetchUserDetail.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [userData, error] = action.payload\r\n            if (!error) {\r\n                state.data = userData.data;\r\n            } else {\r\n                state.error = error.message;\r\n            }\r\n        },\r\n        [fetchUserDetail.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        [postNewUser.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [postNewUser.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [userData, error] = action.payload\r\n            if (!error) {\r\n                state.data = userData.user;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [postNewUser.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n        [updateExistingUser.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [updateExistingUser.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [userData, error] = action.payload\r\n            if (!error) {\r\n                state.data = userData.user;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [updateExistingUser.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n        [deleteUser.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [deleteUser.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [userData, error] = action.payload\r\n            if (!error) {\r\n                state.data = userData.user;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [deleteUser.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n    }\r\n})\r\n\r\nconst { reducer, actions } = userDetailSlice;\r\n\r\nexport const {resetUserDetail } = actions;\r\nexport default reducer;","import { Logout } from '@mui/icons-material'\r\nimport { Box, AppBar, Toolbar, IconButton, } from '@mui/material'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport auth from '../features/auth/auth'\r\nimport gurzuLogo from \"../assets/gurzuLogo.svg\"\r\nimport { resetUserDetail } from '../features/user/userDetailSlice'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const dispatch = this.props.dispatch;\r\n        return (\r\n            <Box  sx={{ width: \"100%\", position:\"relative\"}}>\r\n                <AppBar position=\"sticky\" sx={{ width: auth.isAuthenticated() ?\"calc(100vw - 200px)\"  :\"100vw\"}}color=\"light\">\r\n                    <Toolbar>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                            <img src={gurzuLogo} alt=\"Gurzu logo\" width={120} />\r\n                        </Box>\r\n                        {\r\n                            auth.isAuthenticated() &&\r\n                            <IconButton\r\n                                onClick={() => auth.logout(() => {\r\n                                    dispatch(resetUserDetail());\r\n                                    this.props.history.push('/login');\r\n                                })}>\r\n                                <Logout />\r\n                            </IconButton>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { auth: state.auth, userDetail: state.userDetail };\r\n}\r\n\r\nHeader = connect(mapStateToProps)(Header);","import { Alert, AlertTitle, Box } from '@mui/material'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Message extends Component {\r\n    render() {\r\n        const { severity, title, message } = this.props.values;\r\n        const display = this.props.display;\r\n        return (\r\n            <Box >\r\n                <Alert severity={severity} sx={{ display: display, position: \"fixed\", bottom: 20, right: 20 , zIndex:9}} variant=\"filled\" >\r\n\r\n                    {title}\r\n\r\n                    {message}\r\n                </Alert>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    data: {\r\n        role: 3\r\n    }\r\n}\r\n\r\nconst root = createSlice({\r\n    initialState,\r\n    name: \"root\",\r\n    reducers: {\r\n        setState: (state, action) => {\r\n            state.data =  action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nconst {reducer, actions} = root;\r\nexport const {setState} = actions;\r\nexport default reducer;","import { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box, Container, Paper, Stack, Button, TextField } from '@mui/material';\r\nimport { fetchAuth } from '../../features/auth/authSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport auth from '../../features/auth/auth'\r\nimport Header from '../../component/Header';\r\nimport { useState } from 'react';\r\nimport Message from '../../component/Message';\r\nimport { setState } from '../../features/rootSlice';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst LoginPage = (props) => {\r\n  const [messageVisibility, setMessageVisibility] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state)\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      const payload = { user: values }\r\n      dispatch(fetchAuth(payload))\r\n        .unwrap()\r\n        .then((promiseResult) => {\r\n          const [result, error] = promiseResult;\r\n          if (error) {\r\n            setMessageVisibility(true);\r\n          } else {\r\n            dispatch(setState(result.attributes));\r\n            auth.login({...result.attributes, id:result.id}, () => {\r\n              props.history.push('/');\r\n            })\r\n          }\r\n        })\r\n    },\r\n  });\r\n\r\n  auth.isAuthenticated() && (props.history.push('/'))\r\n\r\n  return (\r\n    <Box sx={{ height: \"100vh\" }}>\r\n      <Header />\r\n      <Message values={{ severity: \"error\", title: \"\", message: state.auth.errorMessage }} display={messageVisibility ? \"flex\" : \"none\"} />\r\n      <Container\r\n        maxWidth=\"xs\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItem: \"center\",\r\n          mt: 10\r\n        }}>\r\n        <Paper elevation={2} sx={{ p: 5 }}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Stack direction=\"column\" spacing={3} alignItems=\"center\">\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                margin=\"normal\"\r\n                size=\"medium\"\r\n                sx={{\r\n                  m: \"0 auto\",\r\n                  maxWidth: \"6px\"\r\n                }}>\r\n                Login\r\n              </Button>\r\n                <Button\r\n                  variant=\"text\"\r\n                  sx={{\r\n                    m: \"0 auto\"\r\n                  }}\r\n                  href=\"/forgot-password\">\r\n                  Forgot your password?\r\n                </Button>\r\n            </Stack>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default LoginPage;\r\n\r\n","import { Dashboard, People, Storage, Person, Message, HolidayVillage } from \"@mui/icons-material\";\r\nimport { Box, Divider, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Typography } from \"@mui/material\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCookie } from \"../utils/cookies\";\r\nimport { fetchCurrentUser } from \"../features/user/userDetailSlice\";\r\n\r\nexport default class SideBar extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchCurrentUser())\r\n  }\r\n\r\n  render() {\r\n    const userDetail = this.props.currentUserData;\r\n    const adminNavLinks = [\r\n      { icon: <Dashboard color=\"light\" />, text: \"Dashboard\" },\r\n      { icon: <People color=\"light\" />, text: \"Employees\" },\r\n      { icon: <Storage color=\"light\" />, text: \"Attendance\" },\r\n      { icon: <Message color=\"light\" />, text: \"Requests\" },\r\n      { icon: <HolidayVillage color=\"light\" />, text: \"Holidays\" }];\r\n    const userNavLinks = [\r\n      { icon: <Dashboard color=\"light\" />, text: \"Dashboard\" },\r\n      { icon: <Person color=\"light\" />, text: \"User Profile\" },\r\n      { icon: <Storage color=\"light\" />, text: \"Attendance\" },\r\n      { icon: <Message color=\"light\" />, text: \"Requests\" },\r\n    ];\r\n    const navLinks = getCookie(\"role\") === \"3\" ? userNavLinks : adminNavLinks;\r\n\r\n    return (\r\n      <Box sx={{\r\n        bgcolor: 'primary.main',\r\n        color: 'light.main',\r\n        height: '100%',\r\n        minHeight: '100vh',\r\n        width: '200px'\r\n      }}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText>\r\n              <Typography variant=\"body1\">\r\n                Welcome <br /> {userDetail.name}\r\n                <br />\r\n              </Typography>\r\n              <Divider />\r\n              <br />\r\n              <Typography variant=\"body2\">\r\n                Email: {userDetail.email}\r\n              </Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <Divider />\r\n          {navLinks.map((element, index) => {\r\n            return (<ListItem key={index}>\r\n              <ListItemButton onClick={() => {\r\n                this.props.history.push(`/${element.text.toLowerCase().replace(\" \", \"\")}`)\r\n              }}>\r\n                <ListItemIcon >\r\n                  {element.icon}\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  {element.text}\r\n                </ListItemText>\r\n              </ListItemButton>\r\n            </ListItem>)\r\n          })}\r\n        </List>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.userDetail }\r\n}\r\n\r\nSideBar = connect(mapStateToProps)(SideBar);","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport auth from '../features/auth/auth'\r\nimport SideBar from './SideBar'\r\nimport Header from './Header'\r\nimport { Box, Stack } from '@mui/material'\r\n\r\nexport default function ProtectedRoute({ component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n\r\n                if (auth.isAuthenticated()) {\r\n\r\n                    return (\r\n                        <>\r\n                            <Stack direction=\"row\">\r\n                                <Box >\r\n                                    <SideBar {...props} />\r\n                                </Box>\r\n                                <Box >\r\n                                    <Header {...props} />\r\n                                    <Box>\r\n                                        <Component {...props} />\r\n                                    </Box>\r\n                                </Box>\r\n                            </Stack>\r\n\r\n                        </>\r\n                    );\r\n                } else {\r\n                    return (<Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }}\r\n                    />)\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#0748A6\",\r\n            contrastText: \"#f2f2f2\"\r\n        },\r\n        secondary: {\r\n            main: \"#94C0FF\",\r\n            contrastText: \"#f2f2f2\"\r\n        },\r\n        dark: {\r\n            main: \"#333333\",\r\n            contrastText: \"#f2f2f2\"\r\n        },\r\n        light: {\r\n            main: \"#f2f2f2\",\r\n            contrastText: \"#333333\"\r\n        },\r\n        gray: {\r\n            main: \"#a3a3a3\"\r\n        },\r\n    }\r\n})\r\n\r\nexport const gradientCollection = {\r\n    info: {\r\n        main: \"linear-gradient(to bottom right, #39C1FD, #18E7FE)\"\r\n    },\r\n    gradientPurple: {\r\n        main: \"linear-gradient(to bottom right, #D7B7FF, #A078FF)\"\r\n    },\r\n    danger: {\r\n        main: \"linear-gradient(to bottom right, #F46173, #F28579)\"\r\n    },\r\n    warning: {\r\n        main: \"linear-gradient(to bottom right, #F57F28, #F6B44A)\"\r\n    },\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport { Delete, Edit, RemoveRedEye } from '@mui/icons-material';\r\nimport { gradientCollection, } from '../utils/theme';\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default function CustomPaginationActionsTable(props) {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const rows = props.data;\r\n    const columns = props.fields;\r\n    const buttons = props.buttons;\r\n\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {columns.map((field, index) => <TableCell key={index} align={index !== 0 ? \"right\" : \"left\"}>{field.replace(\"_\",\" \").toUpperCase()}</TableCell>)}\r\n                        {buttons.map((field, index) => <TableCell key={index} ></TableCell>)}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(rowsPerPage > 0\r\n                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        : rows\r\n                    ).map((row, index) => (\r\n                        <TableRow key={index}>\r\n                            {columns.map((field, columnIndex) => <TableCell\r\n                                scope=\"row\"\r\n                                key={columnIndex}\r\n                                align={columnIndex !== 0 ? \"right\" : \"left\"}\r\n                                width=\"auto\"\r\n                            >{row[field]}</TableCell>)}\r\n                            {buttons.length > 0 &&\r\n                                buttons.map((button, buttonIndex) => {\r\n                                    return (\r\n                                        <TableCell key={buttonIndex}>\r\n                                            {(button.type === \"view\") ?\r\n                                                <IconButton color=\"light\" sx={{\r\n                                                    background: gradientCollection.info.main,\r\n                                                    \"&:hover\": {\r\n                                                        transform: \"scale(1.1)\",\r\n                                                    }\r\n                                                }}\r\n                                                    onClick={() => { button.callback(row.id) }}\r\n                                                >\r\n                                                    <RemoveRedEye />\r\n                                                </IconButton>\r\n                                                :\r\n                                                (button.type === \"edit\") ?\r\n                                                    <IconButton\r\n                                                        color=\"light\"\r\n                                                        sx={{\r\n                                                            background: gradientCollection.warning.main,\r\n                                                            \"&:hover\": {\r\n                                                                transform: \"scale(1.1)\",\r\n                                                            }\r\n                                                        }}\r\n                                                        onClick={() => {\r\n                                                            button.callback(row.id);\r\n                                                        }}\r\n                                                    >\r\n                                                        <Edit />\r\n                                                    </IconButton>\r\n                                                    : (button.type === \"delete\") ?\r\n                                                        <IconButton color=\"light\"\r\n                                                            sx={{\r\n                                                                background: gradientCollection.danger.main,\r\n                                                                \"&:hover\": {\r\n                                                                    transform: \"scale(1.1)\",\r\n                                                                }\r\n                                                            }}\r\n                                                            onClick={() => { button.callback(row.id) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                        :\r\n                                                        (button.type === \"none\") ?\r\n                                                            null\r\n                                                            :\r\n                                                            <Button\r\n                                                                variant=\"contained\"\r\n                                                                onClick={() => { button.callback(row.id)\r\n                                                                }}\r\n                                                                disabled={row.approval_status!==\"pending\"}\r\n                                                            >\r\n                                                                {button.type}\r\n                                                            </Button>\r\n                                            }\r\n                                        </TableCell>\r\n                                    )\r\n                                })}\r\n                        </TableRow>\r\n                    ))}\r\n\r\n                    {emptyRows > 0 && (\r\n                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                            colSpan={5}\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: {\r\n                                    'aria-label': 'rows per page',\r\n                                },\r\n                                native: true,\r\n                            }}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\n\r\nexport const fetchAllUsers = createAsyncThunk(\r\n    \"get/users\",\r\n    async () => {\r\n        try {\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allUsers = await axiosInstance.get(\"users\")\r\n            return [allUsers.data, null]\r\n        }\r\n        catch (error) {\r\n            return [null, error.message];\r\n        }\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    data: [],\r\n    mapIdToName: {}\r\n}\r\n\r\nconst allUserSlice = createSlice({\r\n    initialState,\r\n    name: \"employee\",\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [fetchAllUsers.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [fetchAllUsers.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (error) {\r\n                state.error = error;\r\n            } else {\r\n                state.data = [ ...result.data ];\r\n                // state.mapIdToName = result.data.map((elem)=> {\r\n                //     return {id: elem.id, name: elem.name};\r\n                // })\r\n                state.data.forEach(elem => {\r\n                    state.mapIdToName[`${elem.id}`] = elem.name\r\n                })\r\n            }\r\n        \r\n        },\r\n        [fetchAllUsers.rejected]: (state, action) => {\r\n            state.loading = true;\r\n            state.error = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nconst { reducer } = allUserSlice;\r\n\r\nexport default reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\n\r\nexport const getStartTimer = createAsyncThunk(\r\n        \"get/timer\",\r\n        async (payload) => {\r\n            try {\r\n                const url = \"start_timer\";\r\n                const AUTHTOKEN = getCookie(\"token\");\r\n                axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n                const result = await axiosInstance.get(url);\r\n                return [result.data, null];\r\n            }\r\n            catch (error) {\r\n                if (error.response) {\r\n                    const { data, status, headers } = error.response;\r\n                    return [null, { data, status, headers }]\r\n                } else if (error.request) {\r\n                    return [null, error.request]\r\n                } else {\r\n                    return [null, error.message]\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    )\r\n\r\n\r\nexport const getAllAttendance = createAsyncThunk(\r\n        \"get/allAttendance\",\r\n        async (payload) => {\r\n            try {\r\n                const url = \"all_attendances\";\r\n                const AUTHTOKEN = getCookie(\"token\");\r\n                axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n                const allAttendance = await axiosInstance.get(url);\r\n                return [allAttendance.data, null];\r\n            }\r\n            catch (error) {\r\n                if (error.response) {\r\n                    const { data, status, headers } = error.response;\r\n                    return [null, { data, status, headers }]\r\n                } else if (error.request) {\r\n                    return [null, error.request]\r\n                } else {\r\n                    return [null, error.message]\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    )\r\n\r\n\r\nexport const getAttendance = createAsyncThunk(\r\n    \"get/myAttendance\",\r\n    async () => {\r\n        try {\r\n            const url = \"attendances\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allAttendance = await axiosInstance.get(url);\r\n            return [allAttendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const getUserAttendance = createAsyncThunk(\r\n    \"get/userAttendance\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"user_attendances/\" + payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const attendance = await axiosInstance.get(url);\r\n            return [attendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const postAttendance = createAsyncThunk(\r\n    \"post/attendance\",\r\n    async (payload = {}) => {\r\n        try {\r\n            const url = \"attendances\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.post(url, payload);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\n\r\nexport const patchAttendance = createAsyncThunk(\r\n    \"patch/attendance\",\r\n    async (payload = {}) => {\r\n        try {\r\n            const { attId } = payload\r\n            const data = payload.data || {}\r\n            const url = \"attendances/\" + attId;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.patch(url, data);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteAttendance = createAsyncThunk(\r\n    \"delete/attendance\",\r\n    async (payload) => {\r\n        try {\r\n            const { attId } = payload\r\n            const url = \"attendances/\" + attId;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.delete(url);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n\r\n    }\r\n)\r\n\r\nconst initialState = {\r\n    allAttendanceData: [],\r\n    attendanceResult: {},\r\n    loading: false,\r\n    error: {},\r\n    clockout: false,\r\n}\r\n\r\nconst attendanceSlice = createSlice({\r\n    name: \"attendance\",\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [getAllAttendance.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getAllAttendance.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.allAttendanceData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getAllAttendance.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [getAttendance.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getAttendance.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.allAttendanceData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getAttendance.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [getUserAttendance.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getUserAttendance.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.allAttendanceData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getUserAttendance.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n\r\n        [postAttendance.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [postAttendance.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.attendanceResult = result.data;\r\n                state.allAttendanceData[state.allAttendanceData.length - 1] = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [postAttendance.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [patchAttendance.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [patchAttendance.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.attendanceResult = result.data;\r\n                state.allAttendanceData[state.allAttendanceData.length - 1] = result.data\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [patchAttendance.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [deleteAttendance.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [deleteAttendance.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.attendanceResult = result.data;\r\n                state.allAttendanceData[state.allAttendanceData.length - 1] = result.data\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [deleteAttendance.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n    }\r\n})\r\n\r\nconst { reducer } = attendanceSlice;\r\nexport default reducer;","import { KeyboardReturn } from '@mui/icons-material';\r\nimport { Avatar, Box, Button, Divider, IconButton, Paper, Stack, Typography } from '@mui/material';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../component/Message';\r\nimport CustomPaginationActionsTable from '../../component/Table';\r\nimport { fetchAllUsers } from '../../features/allUser/allUserSlice';\r\nimport { deleteAttendance, getUserAttendance, patchAttendance, postAttendance } from '../../features/attendance/attendanceSlice';\r\nimport { deleteUser, fetchUserDetail } from '../../features/user/userDetailSlice';\r\n\r\n\r\n\r\nexport default class UserDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userId = this.props.match.params.id;\r\n        this.dispatch = this.props.dispatch;\r\n        this.state = {\r\n            error: \"\",\r\n            userDetails: {},\r\n            messageTitle: \"\",\r\n            messageSeverity: \"info\",\r\n            messageVisibility: \"none\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(fetchUserDetail(this.userId))\r\n\r\n        this.dispatch(getUserAttendance(this.userId))\r\n    }\r\n\r\n\r\n    promiseHandler(error) {\r\n        if (!error) {\r\n            this.setState({\r\n                messageTitle: \"Attendance Successfully Recorded\",\r\n                messageSeverity: \"success\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        }else if(error.data){\r\n            this.setState({\r\n                messageTitle: error.data.message,\r\n                messageSeverity: \"warning\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n        }\r\n         else {\r\n            this.setState({\r\n                messageTitle: \"oops!! Something Went Wrong\",\r\n                messageSeverity: \"warning\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messageTitle: \"\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"none\",\r\n            })\r\n        }, 5000)\r\n    }\r\n\r\n\r\n    clockOut = (list) => {\r\n        if (list.length) {\r\n            return this.latestAttendance(list).clock_out === null\r\n        }\r\n    }\r\n\r\n    latestAttendance(list) {\r\n        return list[list.length - 1];\r\n    }\r\n\r\n    render() {\r\n        const userDetails = this.props.data;\r\n        const attendanceFields = [\"att_date\", \"clock_in\", \"clock_out\", \"leave_status\"]\r\n        let attendanceList = this.props.allAttendanceData;\r\n        attendanceList = attendanceList.map(elem => {\r\n            return {...elem, leave_status: elem.leave_status? \"on a leave\" : \"none\"}\r\n        })\r\n        attendanceList = (attendanceList.map(elem => {\r\n            return {\r\n                ...elem,\r\n                clock_in: elem.clock_in !== null ? elem.clock_in.slice(11, 19) : null,\r\n                clock_out: elem.clock_out !== null ? elem.clock_out.slice(11, 19) : null,\r\n                user_id: this.props.allUser.mapIdToName[elem.user_id],\r\n            }\r\n        })\r\n        )\r\n        return (\r\n            <Box>\r\n                <Message\r\n                    values={{\r\n                        severity: this.state.messageSeverity,\r\n                        title: this.state.messageTitle\r\n                    }}\r\n                    display={this.state.messageVisibility}\r\n                />\r\n                <IconButton\r\n                    sx={{ margin: 2 }}\r\n                    onClick={() => this.props.history.push('/employees')}>\r\n                    <KeyboardReturn />\r\n                </IconButton>\r\n                <Stack direction=\"row\" spacing={2} margin={2}>\r\n                    <Avatar\r\n                        alt=\"user profile pricture\"\r\n                        src=\"https://thispersondoesnotexist.com/image\"\r\n                        variant=\"rounded\"\r\n                        sx={{ width: \"15vw\", height: \"auto\" }} />\r\n                    <Divider orientation=\"vertical\" />\r\n                    <Paper sx={{\r\n                        padding: 2\r\n                    }}>\r\n                        <Typography variant=\"h6\">\r\n                            ID: {userDetails.id} <br />\r\n                            Name: {userDetails.name}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <Typography variant=\"body1\">\r\n                            Email: {userDetails.name} <br />\r\n                            Contact: {userDetails.email} <br />\r\n                            role: {userDetails.role === 1 ? \"SuperUser\" : userDetails.role === 2 ? \"Admin\" : \"User\"}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <Typography variant=\"body2\">\r\n                            Gender: {userDetails.gender === 1 ? \"Male\" : \"Female\"}<br />\r\n                            Salary: {userDetails.salary}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Stack>\r\n                <Box sx={{ margin: 2, marginBottom: 0 }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={{ margin: 2, marginLeft: 0 }}\r\n                        onClick={() => {\r\n                            this.clockOut(attendanceList) ?\r\n                                this.dispatch(patchAttendance({ attId: this.latestAttendance(attendanceList).id, data: { user_id: this.userId } }))\r\n                                    .unwrap()\r\n                                    .then((promiseResult) => {\r\n                                        const [result, error] = promiseResult;\r\n                                        this.promiseHandler(error);\r\n                                        this.dispatch(getUserAttendance(this.userId))\r\n                                    })\r\n                                :\r\n                                this.dispatch(postAttendance({ user_id: this.userId }))\r\n                                    .unwrap()\r\n                                    .then((promiseResult) => {\r\n                                        const [result, error] = promiseResult\r\n                                        this.promiseHandler(error);\r\n                                        this.dispatch(getUserAttendance(this.userId))\r\n                                    })\r\n                        }}>\r\n                        {this.clockOut(attendanceList) ? \"Clock Out\" : \"Clock In\"}\r\n                    </Button>\r\n                    <CustomPaginationActionsTable\r\n                        data={attendanceList}\r\n                        fields={attendanceFields}\r\n                        buttons={[\r\n                            {\r\n                                type: \"delete\",\r\n                                callback: (id) => {\r\n                                    console.log(id)\r\n                                    this.dispatch(deleteAttendance({attId: id}))\r\n                                            .unwrap()\r\n                                            .then(promiseResult => {\r\n                                                const [result, error] = promiseResult;\r\n                                                this.promiseHandler(error);\r\n                                                this.dispatch(getUserAttendance(this.userId));\r\n                                            })\r\n                                }\r\n                            }\r\n                        ]} />\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.userDetail, ...state.attendance, allUser: state.allUser }\r\n}\r\n\r\nUserDetail = connect(mapStateToProps)(UserDetail);","export default __webpack_public_path__ + \"static/media/404.b50b6b05.jpg\";","import { Typography, Stack } from '@mui/material'\r\nimport React, { Component } from 'react'\r\nimport image from '../../assets/404.jpg'\r\n\r\nexport default class Notfound extends Component {\r\n    render() {\r\n        return (\r\n            <Stack sx={{backgroundColor: 'white'}} justifyContent=\"center\">\r\n                <Typography variant=\"h3\" align=\"center\">\r\n                    Page not found\r\n                </Typography>\r\n                \r\n                    <img src={image} alt=\"404 not found\" />\r\n               \r\n            </Stack>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport CustomPaginationActionsTable from '../../component/Table'\r\nimport { getAllAttendance, deleteAttendance } from '../../features/attendance/attendanceSlice';\r\nimport { fetchAllUsers } from '../../features/allUser/allUserSlice';\r\nimport { connect } from 'react-redux';\r\nimport { Box } from '@mui/system';\r\nimport Notfound from '../pages/Notfound';\r\nimport Message from '../../component/Message'\r\n\r\nexport default class Attendance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatch = this.props.dispatch;\r\n        this.location = this.props.location;\r\n        this.state = {\r\n            messageTitle: \"\",\r\n            messageSeverity: \"info\",\r\n            messageVisibility: \"none\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(getAllAttendance()).then(() => {\r\n            this.dispatch(fetchAllUsers());\r\n        })\r\n    }\r\n\r\n\r\n    promiseHandler = (result, error) => {\r\n        if (!error) {\r\n            this.setState({\r\n                messageTitle: \"Record Deleted\",\r\n                messageSeverity: \"success\",\r\n                messageVisibility: \"flex\"\r\n            })\r\n\r\n        } else if (error.data.message) {\r\n            this.setState({\r\n                message: JSON.stringify(error.data.message),\r\n                messageSeverity: \"Warning\",\r\n                messageVisibility: \"flex\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                message: \"oops!! Something Went Wrong\",\r\n                messageSeverity: \"Warning\",\r\n                messageVisibility: \"flex\"\r\n            })\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: \"\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"none\"\r\n            })\r\n        }, 5000)\r\n    }\r\n\r\n    render() {\r\n        let attendanceList = this.props.allAttendanceData;\r\n        if (attendanceList.length) {\r\n            attendanceList = (attendanceList.map(elem => {\r\n                return {\r\n                    ...elem,\r\n                    clock_in: elem.clock_in !== null ? elem.clock_in.slice(11, 19) : null,\r\n                    clock_out: elem.clock_out !== null ? elem.clock_out.slice(11, 19) : null,\r\n                    user_id: this.props.allUser.mapIdToName[elem.user_id],\r\n                    leave_status: elem.leave_status? \"on a leave\" : \"none\"\r\n                }\r\n            })\r\n            )\r\n        }\r\n        const attendanceFields = [\"user_id\", \"att_date\", \"clock_in\", \"clock_out\", \"leave_status\"]\r\n\r\n        if (this.props.userDetail.currentUserData.role >= 3) {\r\n            return <Notfound />\r\n        } else {\r\n            return (\r\n                <Box sx={{ margin: 6 }}>\r\n                    <Message values={{\r\n                        title: this.state.messageTitle,\r\n                        severity: this.state.messageSeverity\r\n                    }}\r\n                    display={this.state.messageVisibility}\r\n                    />\r\n                    <CustomPaginationActionsTable\r\n                        data={attendanceList}\r\n                        fields={attendanceFields}\r\n                        buttons={[{ type: \"delete\", callback: (id) => { \r\n                            console.log(id)\r\n                            this.dispatch(deleteAttendance(id))\r\n                            .unwrap()\r\n                            .then(promiseResult=> {\r\n                                const [result, error] = promiseResult;\r\n                                this.promiseHandler(result, error);\r\n                                this.dispatch(getAllAttendance());\r\n                            })\r\n                        } }]} />\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.attendance, allUser: state.allUser, userDetail: state.userDetail }\r\n}\r\n\r\nAttendance = connect(mapStateToProps)(Attendance);","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\n\r\nexport const getAllRequest = createAsyncThunk(\r\n    \"getall/request\",\r\n    async () => {\r\n        try {\r\n            const url = \"all_requests\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allAttendance = await axiosInstance.get(url);\r\n            return [allAttendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const getRequest = createAsyncThunk(\r\n    \"get/request\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"requests/\"+ payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allAttendance = await axiosInstance.get(url);\r\n            return [allAttendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\n\r\nexport const getMyRequest = createAsyncThunk(\r\n    \"get/myRequest\",\r\n    async () => {\r\n        try {\r\n            const url = \"requests\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allAttendance = await axiosInstance.get(url);\r\n            return [allAttendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const getUserRequest = createAsyncThunk(\r\n    \"get/userRequest\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"user_requests/\" + payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const request = await axiosInstance.get(url);\r\n            return [request.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const postRequest = createAsyncThunk(\r\n    \"post/request\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"requests\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.post(url, payload);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\n\r\nexport const patchRequest = createAsyncThunk(\r\n    \"patch/request\",\r\n    async (payload) => {\r\n        try {\r\n            const { requestId } = payload\r\n            const data = payload.data\r\n            const url = \"requests/\" + requestId;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.patch(url, data);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const approveRequest = createAsyncThunk(\r\n    \"approve/request\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"approve_request/\" + payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.get(url);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const rejectRequest = createAsyncThunk(\r\n    \"reject/request\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"reject_request/\" + payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.get(url);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\n\r\n\r\nconst initialState = {\r\n    allRequestData: [],\r\n    requestResult: {},\r\n    myRequestData: [],\r\n    loading: false,\r\n    error: {},\r\n}\r\n\r\nconst requestSlice = createSlice({\r\n    name: \"request\",\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [getAllRequest.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getAllRequest.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.allRequestData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getAllRequest.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [getRequest.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getRequest.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.requestResult = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getRequest.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [getMyRequest.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getMyRequest.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.myRequestData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getMyRequest.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [getUserRequest.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getUserRequest.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.allRequestData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getUserRequest.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n\r\n        [postRequest.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [postRequest.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.requestResult = result.data;\r\n                state.allRequestData.push(result.data);\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [postRequest.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [patchRequest.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [patchRequest.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.requestResult = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [patchRequest.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n    }\r\n})\r\n\r\nconst { reducer } = requestSlice;\r\nexport default reducer;","export default __webpack_public_path__ + \"static/media/401.890e6c54.jpg\";","import { Typography, Stack } from '@mui/material'\r\nimport React, { Component } from 'react'\r\nimport image from '../../assets/401.jpg'\r\n\r\nexport default class Notfound extends Component {\r\n    render() {\r\n        return (\r\n            <Stack sx={{backgroundColor: 'white'}} justifyContent=\"center\">\r\n                <Typography variant=\"h3\" align=\"center\">\r\n                    Not Authorized\r\n                </Typography>\r\n                \r\n                    <img src={image} alt=\"401 not Authorized\" />\r\n               \r\n            </Stack>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Box } from '@mui/system';\r\nimport { getAllAttendance, getStartTimer } from '../../features/attendance/attendanceSlice';\r\nimport { getAllRequest } from '../../features/request/requestSlice';\r\nimport { fetchAllUsers } from '../../features/allUser/allUserSlice';\r\nimport { Button, Card, CardContent, CardMedia, Divider, Icon, List, ListItem, ListItemText, ListSubheader, Paper, Stack, Typography } from '@mui/material';\r\nimport { Message, SupervisorAccount, Storage } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\nimport Unauthorized from '../pages/Unauthorized'\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatch = this.props.dispatch;\r\n        this.state = {\r\n            totalEmployees: 0,\r\n            userHash: {},\r\n            todayAttendance: [],\r\n            absentToday: [],\r\n            pendingRequest: [],\r\n            noOfRequest: 0,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.dispatch(fetchAllUsers())\r\n            .then(() => {\r\n                this.dispatch(getAllAttendance())\r\n                    .then(() => {\r\n                        this.dispatch(getAllRequest())\r\n                    });\r\n            })\r\n    }\r\n\r\n    filterByToday(list) {\r\n        const date = new Date();\r\n        const today = `${date.getFullYear()}-${('0' + (date.getMonth() + 1)).slice(-2)}-${('0' + date.getDate()).slice(-2)}`\r\n        const filteredList = list.filter(elem => {\r\n            return elem.att_date === today\r\n        })\r\n        return filteredList;\r\n    }\r\n\r\n    filterByPendingRequest(list) {\r\n        return list.filter(elem => {\r\n            return elem.approval_status === \"pending\";\r\n        })\r\n    }\r\n\r\n    filterByOnLeaveToday(list) {\r\n        return list.filter(elem => {\r\n            return elem.leave_status;\r\n        })\r\n    }\r\n\r\n    filterByAbsentToday(list) {\r\n        return list.filter(elem => {\r\n            return elem.clock_in === null;\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.userDetail.currentUserData.role >= 3) {\r\n            return <Unauthorized />\r\n        } else {\r\n            return (\r\n                <Box margin={5}>\r\n                    <h2>AdminDashBoard</h2>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            this.dispatch(getStartTimer());\r\n                        }}>\r\n                        Start Clock\r\n                    </Button>\r\n                    <Box sx={{\r\n                        border: 1,\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        m: \"40px 0px\",\r\n                        width: \"740px\"\r\n                    }} >\r\n                        <Card variant=\"outlined\" sx={{ margin: 3 }}>\r\n                            <Stack direction=\"row\" alignItems=\"center\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">\r\n                                        {this.props.allUser.data.length}\r\n                                    </Typography>\r\n\r\n                                    <Typography variant=\"body2\">\r\n                                        Total Employees\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardMedia sx={{ margin: 2 }}>\r\n                                    <Icon>\r\n                                        <SupervisorAccount />\r\n                                    </Icon>\r\n                                </CardMedia>\r\n                            </Stack>\r\n                        </Card>\r\n                        <Card variant=\"outlined\" sx={{ margin: 3 }}>\r\n                            <Stack direction=\"row\" alignItems=\"center\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">\r\n                                        {this.filterByPendingRequest(this.props.request.allRequestData).length}\r\n                                    </Typography>\r\n\r\n                                    <Typography variant=\"body2\">\r\n                                        Number of Requests\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardMedia sx={{ margin: 2 }}>\r\n                                    <Icon>\r\n                                        <Message />\r\n                                    </Icon>\r\n                                </CardMedia>\r\n                            </Stack>\r\n                        </Card>\r\n                        <Card variant=\"outlined\" sx={{ margin: 3 }}>\r\n                            <Stack direction=\"row\" alignItems=\"center\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">\r\n                                        {this.state.absentToday.length}\r\n                                    </Typography>\r\n\r\n                                    <Typography variant=\"body2\">\r\n                                        absentToday\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardMedia sx={{ margin: 2 }}>\r\n                                    <Icon>\r\n                                        <Storage />\r\n                                    </Icon>\r\n                                </CardMedia>\r\n                            </Stack>\r\n                        </Card>\r\n                    </Box>\r\n                    <Stack direction=\"row\" spacing={3}>\r\n                        <Paper>\r\n                            <List\r\n                                sx={{\r\n                                    minHeight: \"200px\",\r\n                                    minWidth: \"200px\"\r\n                                }}\r\n                                subheader={\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                        Absent Today\r\n                                    </ListSubheader>\r\n                                }>\r\n\r\n                                {this.filterByAbsentToday(this.state.todayAttendance).map((item, index) => {\r\n                                    return (\r\n                                        <ListItem key={index}>\r\n                                            <ListItemText>\r\n                                                <Typography variant=\"body1\">\r\n                                                    {this.props.allUser.mapIdToName.user_id}\r\n                                                </Typography>\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                    )\r\n                                })}\r\n                            </List>\r\n                        </Paper>\r\n                        <Divider orientation=\"vertical\" />\r\n                        <Paper>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/requests\"\r\n                                }}\r\n                                style={{\r\n                                    textDecoration: \"none\",\r\n                                }}>\r\n\r\n                                <List\r\n                                    sx={{\r\n                                        minHeight: \"200px\",\r\n                                        minWidth: \"200px\"\r\n                                    }}\r\n                                    subheader={\r\n                                        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                            Pending Request\r\n                                        </ListSubheader>\r\n                                    }>\r\n                                    {this.filterByPendingRequest(this.props.request.allRequestData).map((item, index) => {\r\n                                        return (\r\n                                            <ListItem key={index}>\r\n                                                <Divider />\r\n                                                <ListItemText>\r\n                                                    <Typography variant=\"body1\" color=\"dark.main\">\r\n                                                        {this.props.allUser.mapIdToName[item.user_id]}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\"\r\n                                                        color=\"dark.main\">\r\n                                                        {\"from: \" + item.from + \" to: \" + item.to}\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        color=\"dark.main\">\r\n                                                        {item.remarks.slice(0, 20) + \"...\"}\r\n                                                    </Typography>\r\n                                                </ListItemText>\r\n                                                <Divider />\r\n                                            </ListItem>\r\n                                        )\r\n                                    })}\r\n                                </List>\r\n                            </Link>\r\n                        </Paper>\r\n                    </Stack>\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state }\r\n}\r\n\r\nDashboard = connect(mapStateToProps)(Dashboard);","import { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport RequestTable from '../../component/Table'\r\nimport { approveRequest, getAllRequest, rejectRequest } from '../../features/request/requestSlice';\r\nimport Message from '../../component/Message';\r\nimport {Box} from '@mui/material'\r\n\r\nexport default class Requests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatch = this.props.dispatch;\r\n        this.history = this.props.history;\r\n        this.state = {\r\n            messageTitle: \"\",\r\n            messageSeverity: \"info\",\r\n            messageVisibility: \"none\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(getAllRequest());\r\n    }\r\n\r\n    promiseHandler(result, error) {\r\n        if (!error) {\r\n            this.setState({\r\n                messageTitle: \"Attendance Successfully Recorded\",\r\n                messageSeverity: \"success\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                messageTitle: error.data.message,\r\n                messageSeverity: \"warning\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messageTitle: \"\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"none\",\r\n            })\r\n        }, 5000)\r\n    }\r\n\r\n\r\n    render() {\r\n        let requestList = this.props.allRequestData.map(elem => {\r\n            return {\r\n                ...elem,\r\n                user_id: this.props.allUser.mapIdToName[elem.user_id],\r\n                approved_by: this.props.allUser.mapIdToName[elem.approved_by]\r\n            }\r\n        });\r\n\r\n        const requestFields = [\"user_id\", \"from\", \"to\", \"approval_status\", \"approved_by\"]\r\n        return (\r\n            <Box m={2}>\r\n                <h1>Leave Requests</h1>\r\n                <Message values={{\r\n                    severity: this.state.messageSeverity,\r\n                    title: this.state.messageTitle, message: \"\"\r\n                }}\r\n                    display={this.state.messageVisibility} />\r\n                <RequestTable\r\n                    fields={requestFields}\r\n                    data={requestList}\r\n                    buttons={[\r\n                        {\r\n                            type: \"view\",\r\n                            callback: (id) => {\r\n                                this.history.push(`/requests/${id}`)\r\n                            }\r\n                        },\r\n                        {\r\n                            type: \"Approve\",\r\n                            \r\n                            callback: (id) => {\r\n                                this.dispatch(approveRequest(id))\r\n                                    .unwrap()\r\n                                    .then((promiseResult) => {\r\n                                        const [result, error] = promiseResult;\r\n                                        this.promiseHandler(result, error)\r\n                                    });\r\n                            }\r\n                        },\r\n                        {\r\n                            type: \"Reject\",\r\n                            callback: (id) => {\r\n                                this.dispatch(rejectRequest(id))\r\n                                    .unwrap()\r\n                                    .then((promiseResult) => {\r\n                                        const [result, error] = promiseResult;\r\n                                        this.promiseHandler(result, error)\r\n                                    });;\r\n                            }\r\n                        }\r\n                    ]} />\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.request, allUser:state.allUser }\r\n}\r\n\r\nRequests = connect(mapStateToProps)(Requests);\r\n\r\n","import { Component } from 'react'\r\nimport { Box, Button } from '@mui/material'\r\nimport { connect } from 'react-redux'\r\nimport CustomPaginationActionsTable from '../../component/Table';\r\nimport { fetchAllUsers } from '../../features/allUser/allUserSlice'\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchUserDetail, deleteUser } from '../../features/user/userDetailSlice';\r\nimport Message from '../../component/Message';\r\nimport Unauthorized from '../pages/Unauthorized';\r\n\r\n\r\nexport default class Employees extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatch = this.props.dispatch;\r\n        this.history = this.props.history;\r\n        this.state = {\r\n            messageSeverity: \"info\",\r\n            messageTitle: \"\",\r\n            messageVisibility: \"none\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(fetchAllUsers())\r\n    }\r\n\r\n    promiseHandler(error) {\r\n        if (error === null) {\r\n            this.setState({\r\n                messageTitle: \"User Succesfully Deleted\",\r\n                messageSeverity: \"success\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                messageTitle: error.data.message,\r\n                messageSeverity: \"warning\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messageTitle: \"\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"none\",\r\n            })\r\n        }, 5000)\r\n    }\r\n\r\n    render() {\r\n        const employeeList = this.props.data\r\n        const employeeFields = [\"id\", \"name\", \"email\", \"gender\", \"role\", \"contact\"]\r\n        if (this.props.userDetail.currentUserData.role >= 3) {\r\n            return <Unauthorized />\r\n        } else {\r\n            return (\r\n                <Box margin={6}>\r\n                    <Message values={{\r\n                        title: this.state.messageTitle,\r\n                        severity: this.state.messageSeverity\r\n                    }} display={this.state.messageVisibility} />\r\n                    <Box margin={6}>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `newUser`,\r\n                                state: {\r\n                                    method: \"post\",\r\n                                    from: this.props.location.path\r\n                                }\r\n                            }}\r\n                            style={{ textDecoration: \"none\" }}>\r\n                            <Button\r\n                            sx={{\r\n                                marginBottom: 4\r\n                            }}\r\n                                variant=\"contained\"\r\n                            >\r\n                                Add new user\r\n                            </Button>\r\n                        </Link>\r\n                        <CustomPaginationActionsTable\r\n                            data={employeeList}\r\n                            fields={employeeFields}\r\n                            buttons={\r\n                                [{\r\n                                    type: \"view\",\r\n                                    callback: (id) => {\r\n                                        this.history.push(`/users/${id}`);\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: \"edit\", callback: (id) => {\r\n                                        this.dispatch(fetchUserDetail(id))\r\n                                            .unwrap()\r\n                                            .then((data) => {\r\n                                                const [userData, error] = data;\r\n                                                this.history.push(`/users/edit/${id}`,\r\n                                                    {\r\n                                                        userData: userData.data,\r\n                                                        method: \"patch\"\r\n                                                    }\r\n                                                )\r\n                                            });\r\n                                    }\r\n                                },\r\n                                {\r\n                                    type: \"delete\", callback: (id) => {\r\n                                        this.dispatch(deleteUser(id))\r\n                                            .unwrap()\r\n                                            .then(promiseResult => {\r\n                                                const [result, error] = promiseResult;\r\n                                                this.promiseHandler(error);\r\n                                                this.dispatch(fetchAllUsers());\r\n                                            })\r\n                                    }\r\n                                }]\r\n                            }\r\n                        />\r\n                    </Box>\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.allUser, userDetail: state.userDetail }\r\n}\r\n\r\nEmployees = connect(mapStateToProps)(Employees);","import { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Container, Paper, Stack, Button, TextField, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from '@mui/material';\r\nimport { useDispatch, } from 'react-redux';\r\nimport { postNewUser, updateExistingUser } from '../../features/user/userDetailSlice';\r\nimport { useHistory, } from 'react-router-dom';\r\nimport { IconButton } from '@mui/material';\r\nimport { KeyboardReturn } from '@mui/icons-material';\r\nimport Message from '../../component/Message';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst validationSchemaPost = yup.object({\r\n    name: yup\r\n        .string('Enter name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .required('Password is required'),\r\n    gender: yup\r\n        .number('Select Gender')\r\n        .required('Gender is required'),\r\n    role: yup\r\n        .number('Select Role')\r\n        .required('Role is required'),\r\n    contact: yup\r\n        .string('Enter Contact')\r\n        .required('Contact cannot be black')\r\n});\r\nconst validationSchemaPatch = yup.object({\r\n    name: yup\r\n        .string('Enter name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    gender: yup\r\n        .number('Select Gender')\r\n        .required('Gender is required'),\r\n    role: yup\r\n        .number('Select Role')\r\n        .required('Role is required'),\r\n    contact: yup\r\n        .string('Enter Contact')\r\n        .required('Contact cannot be black')\r\n});\r\n\r\n//add method props when calling UserForm\r\n//add existing user to props when method === patch\r\n\r\nconst UserForm = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { method } = props.location.state\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messageVisibility, setMessageVisibility] = useState(false);\r\n    const [messageSeverity, setMessageSeverity] = useState(\"info\");\r\n    const history = useHistory();\r\n\r\n\r\n    const existingUser = history.location.state.userData\r\n    const initialValues = (existingUser) ? {\r\n        ...existingUser,\r\n        gender: existingUser.gender.toString(),\r\n        role: existingUser.role.toString()\r\n    } : {\r\n        name: '',\r\n        email: '',\r\n        password: 'password123',\r\n        gender: '',\r\n        role: '',\r\n        contact: '',\r\n        salary: '',\r\n    };\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: method === \"post\" ? validationSchemaPost : validationSchemaPatch,\r\n        onSubmit: (values) => {\r\n            const payload = {\r\n                user: {\r\n                    ...values,\r\n                    gender: parseInt(values.gender),\r\n                    role: parseInt(values.role),\r\n                    salary: parseFloat(values.salary)\r\n                }\r\n            };\r\n            if (method === \"post\") {\r\n                dispatch(postNewUser(payload))\r\n                    .unwrap()\r\n                    .then(promiseResult => {\r\n                        const [result, error] = promiseResult\r\n                        if (!error) {\r\n                            setMessage(\"user successfully created\")\r\n                            setMessageVisibility(true);\r\n                            setMessageSeverity(\"info\");\r\n                        } else if (error.data.code === '422') {\r\n                            setMessage(error.data.message.email);\r\n                            setMessageVisibility(true);\r\n                            setMessageSeverity(\"warning\");\r\n                        } else {\r\n                            setMessage(\"Something went wrong\");\r\n                            setMessageVisibility(true);\r\n                            setMessageSeverity(\"warning\");\r\n                        }\r\n                        setTimeout(() => {\r\n                            setMessage(\"\");\r\n                            setMessageVisibility(false);\r\n                            setMessageSeverity(\"info\");\r\n                        }, 5000)\r\n                    })\r\n            } else {\r\n                dispatch(updateExistingUser(payload))\r\n                    .unwrap()\r\n                    .then(promiseResult => {\r\n                        const [result, error] = promiseResult;\r\n                        if (!error) {\r\n                            setMessage(\"user updated Successfully\")\r\n                            setMessageVisibility(true);\r\n                            setMessageSeverity(\"success\");\r\n\r\n                        } else {\r\n                            setMessage(\"Something went wrong\");\r\n                            setMessageVisibility(true);\r\n                            setMessageSeverity(\"warning\");\r\n                        }\r\n                        setTimeout(() => {\r\n                            setMessage(\"\");\r\n                            setMessageVisibility(false);\r\n                            setMessageSeverity(\"info\");\r\n                        }, 5000)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <IconButton onClick={() => history.push('/employees')}>\r\n                <KeyboardReturn />\r\n            </IconButton>\r\n            <Message\r\n                values={{\r\n                    severity: messageSeverity,\r\n                    title: message, message: \"\"\r\n                }}\r\n                display={messageVisibility ? \"flex\" : \"none\"} />\r\n            <Container\r\n                maxWidth=\"sm\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItem: \"center\",\r\n                    mt: 10\r\n                }}>\r\n                <Paper elevation={2} sx={{ p: 5 }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack direction=\"column\" spacing={3} alignItems=\"center\">\r\n                            <FormControl>\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    label=\"Name\"\r\n                                    value={formik.values.name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                    helperText={formik.touched.name && formik.errors.name}\r\n                                />\r\n                            </FormControl>\r\n\r\n                            <FormControl>\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    value={formik.values.email}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                    helperText={formik.touched.email && formik.errors.email}\r\n                                />\r\n                            </FormControl>\r\n                            \r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"gender\"\r\n                                    name=\"gender\"\r\n                                    value={formik.values.gender}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <FormControlLabel value=\"1\" control={<Radio />} label=\"Male\" />\r\n                                    <FormControlLabel value=\"2\" control={<Radio />} label=\"Female\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Role</FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"role\"\r\n                                    name=\"role\"\r\n                                    value={formik.values.role}\r\n                                    onChange={formik.handleChange}\r\n                                >\r\n                                    <FormControlLabel value=\"2\" control={<Radio />} label=\"Admin\" />\r\n                                    <FormControlLabel value=\"3\" control={<Radio />} label=\"User\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <FormControl>\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    id=\"contact\"\r\n                                    name=\"contact\"\r\n                                    label=\"Contact\"\r\n                                    value={formik.values.contact}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.contact && Boolean(formik.errors.contact)}\r\n                                    helperText={formik.touched.contact && formik.errors.contact}\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl>\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    id=\"salary\"\r\n                                    name=\"salary\"\r\n                                    label=\"Salary\"\r\n                                    type=\"number\"\r\n                                    value={formik.values.salary}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.salary && Boolean(formik.errors.salary)}\r\n                                    helperText={formik.touched.salary && formik.errors.salary}\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                margin=\"normal\"\r\n                                size=\"medium\"\r\n                                sx={{\r\n                                    m: \"0 auto\",\r\n                                }}>\r\n                                {method === \"post\" ? \"Add User\" : \"Update\"}\r\n                            </Button>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default UserForm;\r\n","import { Box, Typography, Divider, Paper } from '@mui/material'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getRequest } from '../../features/request/requestSlice';\r\n\r\nexport default class RequestView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.requestId = this.props.match.params.id;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(getRequest(this.requestId));\r\n    }\r\n\r\n    render() {\r\n        const requestDetail = this.props.request.requestResult ;\r\n        return (\r\n            <Box sx={{\r\n                p:3,\r\n                lineHeight: \"20px\",\r\n                maxWidth: \"30vw\",\r\n            }}>\r\n                <Paper elevation={2}\r\n                sx={{padding: 4}}>\r\n                <Typography variant=\"h6\">\r\n                    ID: {requestDetail.id} <br />\r\n                </Typography>\r\n                <Divider /><br/>\r\n                <Typography variant=\"body1\">\r\n                    From: {requestDetail.from} <br />\r\n                    To: {requestDetail.to} <br />\r\n                    Reson: {requestDetail.remarks}\r\n                </Typography>\r\n                <Divider /><br/>\r\n                <Typography variant=\"body2\">\r\n                    Approval Status: {requestDetail.approval_status ? requestDetail.approval_status : \"Pending\"}<br />\r\n                    Approved By: {requestDetail.approved_by ? \"Super Admin\" : \"---\"}\r\n                </Typography>\r\n                </Paper>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {request: state.request};\r\n}\r\n\r\nRequestView = connect(mapStateToProps)(RequestView);","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\n\r\nexport const getHolidays = createAsyncThunk(\r\n    \"getall/holiday\",\r\n    async () => {\r\n        try {\r\n            const url = \"holidays\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allAttendance = await axiosInstance.get(url);\r\n            return [allAttendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const getHoliday = createAsyncThunk(\r\n    \"get/holiday\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"requests/\"+ payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const allAttendance = await axiosInstance.get(url);\r\n            return [allAttendance.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const deleteHoliday = createAsyncThunk(\r\n    \"delete/holiday\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"holidays/\"+ payload;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.delete(url);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const postHoliday= createAsyncThunk(\r\n    \"post/holiday\",\r\n    async (payload) => {\r\n        try {\r\n            const url = \"holidays\";\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.post(url, payload);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n)\r\n\r\n\r\nexport const patchHoliday = createAsyncThunk(\r\n    \"patch/holiday\",\r\n    async (payload) => {\r\n        try {\r\n            const { holidayId } = payload\r\n            const data = payload.data\r\n            const url = \"holidays/\" + holidayId;\r\n            const AUTHTOKEN = getCookie(\"token\");\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = AUTHTOKEN;\r\n            const result = await axiosInstance.patch(url, data);\r\n            return [result.data, null];\r\n        }\r\n        catch (error) {\r\n            if (error.response) {\r\n                const { data, status, headers } = error.response;\r\n                return [null, { data, status, headers }]\r\n            } else if (error.request) {\r\n                return [null, error.request]\r\n            } else {\r\n                return [null, error.message]\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    allHolidayData: [],\r\n    holidayResult: {},\r\n    loading: false,\r\n    error: {},\r\n}\r\n\r\nconst holidaySlice = createSlice({\r\n    name: \"holiday\",\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [getHolidays.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getHolidays.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.allHolidayData = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getHolidays.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [getHoliday.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [getHoliday.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.requestResult = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [getHoliday.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n\r\n        [postHoliday.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [postHoliday.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.holidayResult= (result.data);\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [postHoliday.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [patchHoliday.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [patchHoliday.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.holidayResult = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [patchHoliday.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n        [deleteHoliday.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [deleteHoliday.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            const [result, error] = action.payload;\r\n            if (!error) {\r\n                state.requestResult = result.data;\r\n            } else {\r\n                state.error = error;\r\n            }\r\n        },\r\n        [deleteHoliday.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n    }\r\n})\r\n\r\nconst { reducer, actions } = holidaySlice;\r\nexport default reducer;","import React, {useState} from 'react'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\nimport { deleteHoliday, getHolidays } from './holidaySlice';\nimport { useDispatch } from 'react-redux';\nimport Message from '../../component/Message';\n\n\n\nconst HolidayItem = ({ holiday }) => {\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(\"\");\n  const [messageVisibility, setMessageVisibility] = useState(false);\n  const [messageSeverity, setMessageSeverity] = useState(\"info\");\n  const promiseHandler = (result, error) => {\n    if (!error) {\n      setMessage(\"Success!\")\n      setMessageVisibility(true);\n      setMessageSeverity(\"success\");\n\n    } else {\n      setMessage(\"Something went wrong\");\n      setMessageVisibility(true);\n      setMessageSeverity(\"warning\");\n    }\n    setTimeout(() => {\n      setMessage(\"\");\n      setMessageVisibility(false);\n      setMessageSeverity(\"info\");\n    }, 5000)\n\n  }\n  return (\n    <div>\n      <Message\n        values={{\n          severity: messageSeverity,\n          title: message, message: \"\"\n        }}\n        display={messageVisibility ? \"flex\" : \"none\"} />\n\n      <Card sx={{ minWidth: 275, margin: 4 }}>\n        <CardContent>\n\n          <Typography variant=\"h6\">\n            {holiday.title}\n          </Typography>\n          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n            {holiday.date}\n          </Typography>\n          <Typography variant=\"body2\">\n            {holiday.descriptions}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Link\n            to={{\n              pathname: `/holiday/edit/${holiday.id}`,\n              state: {\n                data: holiday,\n                method: \"patch\"\n              }\n            }}\n            style={{\n              textDecoration: \"none\",\n              color: \"dark\"\n            }}\n          >\n            <Button size=\"small\">Edit</Button>\n          </Link>\n          <Button size=\"small\"\n            onClick={() => {\n              dispatch(deleteHoliday(holiday.id))\n              .unwrap()\n              .then((promiseResult)=> {\n                const [result, error] = promiseResult;\n                promiseHandler(result, error);\n                dispatch(getHolidays());\n              });\n            }}>Delete</Button>\n\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default HolidayItem\n","import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport HolidayItem from './HolidayItem'\nimport { getHolidays } from './holidaySlice'\nimport { postHoliday, patchHoliday, deleteHoliday } from './holidaySlice'\nimport { Link } from 'react-router-dom'\nimport { Button } from '@mui/material'\n\n\nconst HolidayList = () => {\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.holiday)\n\n  useEffect(() => {\n    dispatch(getHolidays())\n  }, [])\n\n    return (\n      <>\n        <Link\n        to={{\n          pathname: \"/newHoliday\",\n          state: {\n            method: \"post\",\n            data: {},\n          }\n        }}\n        style={{\n          textDecoration: \"none\"\n        }}\n        >\n          <Button variant=\"contained\" sx={{m:4, mb: 0}}>\n            Add new Holiday\n          </Button>\n        </Link>\n        {state.allHolidayData.map(item =>\n          <HolidayItem holiday={item} />\n        )}\n      </>\n    )\n  \n}\n\nexport default HolidayList\n","import React, { useState } from 'react'\nimport { Button, TextField, Stack } from '@mui/material'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { useDispatch } from 'react-redux';\nimport { postHoliday, patchHoliday } from './holidaySlice'\nimport Message from '../../component/Message';\nimport { useHistory } from 'react-router';\n\n\n\nconst AddHoliday = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { method, data } = props.location.state;\n  const [title, setTitle] = useState(data.title ? data.title : \"\");\n  const [description, setDescription] = useState(data.description ? data.description : \"\");\n  const [date, setDate] = useState(data.date ? new Date(data.date) : new Date());\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const payload = { title, date, description };\n\n    method === \"post\" ?\n      dispatch(postHoliday(payload))\n        .unwrap()\n        .then((promiseResult) => {\n          const [result, error] = promiseResult;\n          promiseHandler(result, error);\n        })\n      :\n      dispatch(patchHoliday({ data: payload, holidayId: data.id }))\n      .unwrap()\n        .then((promiseResult) => {\n          const [result, error] = promiseResult;\n          promiseHandler(result, error);\n        })\n  }\n\n  const [message, setMessage] = useState(\"\");\n  const [messageVisibility, setMessageVisibility] = useState(false);\n  const [messageSeverity, setMessageSeverity] = useState(\"info\");\n  const promiseHandler = (result, error) => {\n    if (!error) {\n      setMessage(\"Success!\")\n      setMessageVisibility(true);\n      setMessageSeverity(\"success\");\n\n    } else {\n      setMessage(\"Something went wrong\");\n      setMessageVisibility(true);\n      setMessageSeverity(\"warning\");\n    }\n    setTimeout(() => {\n      setMessage(\"\");\n      setMessageVisibility(false);\n      setMessageSeverity(\"info\");\n    }, 5000)\n\n  }\n\n  return (\n    <>\n      <Message\n        values={{\n          severity: messageSeverity,\n          title: message, message: \"\"\n        }}\n        display={messageVisibility ? \"flex\" : \"none\"} />\n\n      <form onSubmit={(e) => {\n        handleSubmit(e)\n      }}>\n        <Stack sx={{padding: 4, width: 0.6}}>\n          <TextField\n            margin=\"normal\"\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value)\n            }\n            }\n          />\n          <TextField\n            margin=\"normal\"\n            id=\"description\"\n            name=\"description\"\n            label=\"Description\"\n            value={description}\n            onChange={(e) => {\n              setDescription(e.target.value)\n            }}\n            sx={{\n              marginBottom: 4\n            }}\n          />\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n            \n              label=\"Date\"\n              value={date}\n              onChange={(newValue) => {\n                setDate(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        <Button variant=\"contained\"\n        sx={{width:0.2, marginTop: 4}}\n          type=\"submit\"\n        >Add to list</Button>\n        </Stack>\n\n      </form>\n    </>\n  )\n}\n\nexport default AddHoliday\n","import { Button, Divider } from '@mui/material'\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getAttendance, postAttendance, patchAttendance } from '../../features/attendance/attendanceSlice';\r\nimport { gradientCollection, } from '../../utils/theme';\r\nimport { Paper, List, ListSubheader, ListItem, ListItemText, Typography, Box, Stack } from '@mui/material';\r\nimport { getHolidays } from '../../features/holiday/holidaySlice';\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.dispatch = this.props.dispatch;\r\n        this.userId = this.props.userDetail.currentUserData.id;\r\n        this.state = {\r\n            messageTitle: \"\",\r\n            messageSeverity: \"info\",\r\n            messageVisibility: \"none\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(getAttendance())\r\n        this.dispatch(getHolidays())\r\n    }\r\n\r\n\r\n    promiseHandler(error) {\r\n        if (!error) {\r\n            this.setState({\r\n                messageTitle: \"Attendance Successfully Recorded\",\r\n                messageSeverity: \"success\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                messageTitle: error.data.message,\r\n                messageSeverity: \"warning\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messageTitle: \"\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"none\",\r\n            })\r\n        }, 5000)\r\n    }\r\n\r\n\r\n\r\n    clockOut = (list) => {\r\n        if (list.length) {\r\n            return this.latestAttendance(list).clock_out === null\r\n        }\r\n    }\r\n\r\n    latestAttendance = (list) => {\r\n        return list[list.length - 1];\r\n    }\r\n\r\n\r\n    render() {\r\n        const clockOut = true;\r\n        const attendanceList = this.props.attendance.allAttendanceData\r\n        return (\r\n            <Box sx={{\r\n                margin: 6\r\n            }}>\r\n                <h1>User DashBoard</h1>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                        marginRight: 6,\r\n                        background: gradientCollection.gradientPurple.main,\r\n                        \"&:hover\": {\r\n                            transform: \"scale(1.1)\",\r\n                        }\r\n                    }}\r\n                    onClick={() => {\r\n                        this.clockOut(attendanceList) ?\r\n                            this.dispatch(patchAttendance({ attId: this.latestAttendance(attendanceList).id, data: { user_id: this.userId } }))\r\n                                .unwrap()\r\n                                .then((promiseResult) => {\r\n                                    const [result, error] = promiseResult;\r\n                                    this.promiseHandler(error);\r\n                                    this.dispatch(getAttendance())\r\n                                })\r\n                            :\r\n                            this.dispatch(postAttendance({ user_id: this.userId }))\r\n                                .unwrap()\r\n                                .then((promiseResult) => {\r\n                                    const [result, error] = promiseResult\r\n                                    this.promiseHandler(error);\r\n                                    this.dispatch(getAttendance(this.userId))\r\n                                })\r\n                    }}>\r\n                    {this.clockOut(attendanceList) ? \"Clock Out\" : \"Clock In\"}\r\n                </Button>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/newRequest\",\r\n                        state: {\r\n                            method: \"post\",\r\n                            from: this.props.location.path,\r\n                        }\r\n                    }}\r\n                    style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"light\"\r\n                    }}\r\n                >\r\n                    <Button variant=\"contained\"\r\n                    >\r\n                        Schedule A Leave\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Stack direction=\"row\">\r\n                    <Paper\r\n                        sx={{\r\n                            maxWidth: \"30vw\",\r\n                            marginTop: 4\r\n                        }}>\r\n                        <Link\r\n                            to={{\r\n                                pathname: \"/attendance\"\r\n                            }}\r\n                            style={{\r\n                                textDecoration: \"none\",\r\n                            }}>\r\n\r\n                            <List\r\n                                sx={{\r\n                                    minHeight: \"200px\",\r\n                                    minWidth: \"200px\",\r\n\r\n                                    maxHeight: \"60vh\",\r\n                                    overflow: \"auto\"\r\n                                }}\r\n                                subheader={\r\n                                    <>\r\n                                        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                            Attendance History\r\n                                        </ListSubheader>\r\n                                        <Divider />\r\n                                    </>\r\n                                }>\r\n                                {this.props.attendance.allAttendanceData.map((item, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <Divider />\r\n                                            <ListItem key={index}>\r\n                                                <ListItemText>\r\n                                                    <Typography variant=\"body1\">\r\n                                                        {`Date : ${item.att_date}`}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\">\r\n                                                        {`Clock In : ${item.clock_in ? item.clock_in.slice(11, 19) : \"---\"}`}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\">\r\n                                                        {`ClockOut : ${item.clock_out ? item.clock_out.slice(11, 19) : \"---\"}`}\r\n                                                    </Typography>\r\n                                                </ListItemText>\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </List>\r\n                        </Link>\r\n                    </Paper>\r\n\r\n\r\n                    <Paper\r\n                        sx={{\r\n                            maxWidth: \"30vw\",\r\n                            marginTop: 4,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        <List\r\n                            sx={{\r\n                                minHeight: \"200px\",\r\n                                minWidth: \"200px\",\r\n\r\n                                maxHeight: \"60vh\",\r\n                                overflow: \"auto\"\r\n                            }}\r\n                            subheader={\r\n                                <>\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                        Attendance History\r\n                                    </ListSubheader>\r\n                                    <Divider />\r\n                                </>\r\n                            }>\r\n                            {this.props.holiday.allHolidayData.map((item, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <Divider />\r\n                                        <ListItem key={index}>\r\n                                            <ListItemText>\r\n                                                <Typography variant=\"body1\">\r\n                                                    {`${item.title}`}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\">\r\n                                                    {`${item.date}`}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\">\r\n                                                    {`Description : ${item.description}`}\r\n                                                </Typography>\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                        <Divider />\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </List>\r\n\r\n                    </Paper>\r\n                </Stack>\r\n            </Box>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { userDetail: state.userDetail, attendance: state.attendance, holiday: state.holiday }\r\n};\r\n\r\nDashboard = connect(mapStateToProps)(Dashboard);","import { Component } from 'react'\r\nimport CustomPaginationActionsTable from '../../component/Table'\r\nimport { getAttendance, patchAttendance, postAttendance } from '../../features/attendance/attendanceSlice';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport Message from '../../component/Message'\r\nimport { Box } from '@mui/system';\r\n\r\n\r\nexport default class Attendance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatch = this.props.dispatch;\r\n        this.location = this.props.location;\r\n        this.state = {\r\n            messageTitle: \"\",\r\n            messageSeverity: \"info\",\r\n            messageVisibility: \"none\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(getAttendance())\r\n    }\r\n\r\n    inOutToggle(list) {\r\n        if (list.length) {\r\n            const latestAttendance = list[list.length - 1];\r\n            return latestAttendance.clock_out;\r\n        }\r\n\r\n    }\r\n\r\n    latestAttendance(list) {\r\n        return list[list.length - 1];\r\n    }\r\n\r\n\r\n    promiseHandler(error){\r\n        if (!error) {\r\n            this.setState({\r\n                messageTitle: \"Attendance Successfully Recorded\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        } else {\r\n            this.setState({\r\n                messageTitle: error.data.message,\r\n                messageSeverity: \"warning\",\r\n                messageVisibility: \"flex\",\r\n            })\r\n\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messageTitle: \"\",\r\n                messageSeverity: \"info\",\r\n                messageVisibility: \"none\",\r\n            })\r\n        }, 5000)\r\n    }\r\n    render() {\r\n        const attendanceList = this.props.allAttendanceData.map(elem => {\r\n            return{\r\n                ...elem,\r\n                clock_in: elem.clock_in !== null ? elem.clock_in.slice(11, 19) : null,\r\n                clock_out: elem.clock_out !== null ? elem.clock_out.slice(11, 19) : null,\r\n\r\n            }\r\n        });\r\n        let clockOut = this.inOutToggle(attendanceList);\r\n        const attendanceFields = [\"att_date\", \"clock_in\", \"clock_out\", \"leave_status\"]\r\n        return (\r\n            <Box sx={{\r\n                p:5,\r\n                maxWidth: \"800px\"\r\n            }}>\r\n                <h3>Attendance</h3>\r\n                <Message values={{\r\n                    severity: this.state.messageSeverity,\r\n                    title: this.state.messageTitle,\r\n                    message: \"\",\r\n                }} \r\n                display= {this.state.messageVisibility}/>\r\n                <CustomPaginationActionsTable data={attendanceList} fields={attendanceFields} buttons={[{type: \"none\"}]} />\r\n                <br/>\r\n                <Button\r\n                \r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                        clockOut === null ?\r\n                            this.dispatch(patchAttendance({ attId: this.latestAttendance(attendanceList).id }))\r\n                                .unwrap()\r\n                                .then((promiseResult) => {\r\n                                    const [result, error] = promiseResult;\r\n                                    this.promiseHandler(error);\r\n                                    this.dispatch(getAttendance())\r\n                                })\r\n                            :\r\n                            this.dispatch(postAttendance())\r\n                            .unwrap()\r\n                            .then((promiseResult)=>{\r\n                                const [result, error] = promiseResult\r\n                                this.promiseHandler(error);\r\n                            })\r\n\r\n                    }}>\r\n                    {clockOut === null ? \"Clock Out\" : \"Clock In\"}\r\n                </Button>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.attendance }\r\n}\r\n\r\nAttendance = connect(mapStateToProps)(Attendance);","import { Component } from 'react'\r\nimport CustomPaginationActionsTable from '../../component/Table'\r\nimport { getMyRequest, getRequest } from '../../features/request/requestSlice'\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box } from '@mui/system';\r\n\r\nexport default class Request extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dispatch = this.props.dispatch;\r\n        this.history = this.props.history;\r\n        this.state = {\r\n            messageTitle: \"\",\r\n            messageSeverity: \"info\",\r\n            messageVisibility: \"none\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(getMyRequest())\r\n    }\r\n\r\n    render() {\r\n        const requestList = this.props.myRequestData;\r\n        const requestFields = [\"from\", \"to\", \"approval_status\"]\r\n        return (\r\n            <Box\r\n            sx={{\r\n                p:5,\r\n                maxWidth: \"800px\"\r\n            }}>\r\n                <h1>User Leave Requests</h1>\r\n                <CustomPaginationActionsTable\r\n                    data={requestList}\r\n                    fields={requestFields}\r\n                    buttons={[\r\n                        {\r\n                            type: \"view\",\r\n                            callback: (id) => {\r\n                                this.history.push(\"/requests/\" + id)\r\n                            }\r\n                        },\r\n                        {\r\n                            type: \"edit\",\r\n                            callback: (id) => {\r\n                                this.dispatch(getRequest(id))\r\n                                    .unwrap()\r\n                                    .then((promiseResult) => {\r\n                                        const [requestData, error] = promiseResult;\r\n                                        this.history.push(`/editRequest/${id}`,\r\n                                            {\r\n                                                requestData: requestData.data,\r\n                                                method: \"patch\",\r\n                                            }\r\n                                        )\r\n                                    });\r\n                            }\r\n                        },\r\n                    ]\r\n                    }\r\n                />\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/newRequest\",\r\n                        state: {\r\n                            method: \"post\",\r\n                            from: this.props.location.path,\r\n                        }\r\n                    }}\r\n                    style={{ textDecoration: \"none\" }}\r\n                >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            marginTop: 4\r\n                        }}\r\n                    >\r\n                        Apply For Leave\r\n                    </Button>\r\n                </Link>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.request }\r\n}\r\n\r\nRequest = connect(mapStateToProps)(Request);\r\n\r\n","import { KeyboardReturn } from '@mui/icons-material';\r\nimport { Avatar, Box, Divider, IconButton, Paper, Stack, Typography } from '@mui/material';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchCurrentUser } from '../../features/user/userDetailSlice';\r\n\r\nexport default class UserDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userId = this.props.match.params.id;\r\n        this.dispatch = this.props.dispatch;\r\n        this.state = {\r\n            error: \"\",\r\n            userDetails: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dispatch(fetchCurrentUser())\r\n            .unwrap()\r\n            .then(promiseResult => {\r\n                const [result, error] = promiseResult;\r\n            });\r\n    }\r\n    render() {\r\n        const userDetails = this.props.currentUserData;\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    sx={{mb: 5}}\r\n                    onClick={() => this.props.history.goBack()}>\r\n                    <KeyboardReturn />\r\n                </IconButton>\r\n            <Box sx={{ p: 5 }}>\r\n                <Stack direction=\"row\" spacing={3}>\r\n                    <Avatar\r\n                        alt=\"user profile pricture\"\r\n                        src=\"https://thispersondoesnotexist.com/image\"\r\n                        variant=\"rounded\"\r\n                        sx={{ width: \"25%\", height: \"auto\" }} />\r\n                    <Divider orientation=\"vertical\" />\r\n                    <Box sx={{\r\n                        p:3,\r\n                        lineHeight: \"20px\"\r\n                    }}>\r\n                        <Typography variant=\"h6\">\r\n                            ID: {userDetails.id} <br />\r\n                            Name: {userDetails.name}\r\n                        </Typography>\r\n                        <Divider /><br/>\r\n                        <Typography variant=\"body1\">\r\n                            Email: {userDetails.email} <br />\r\n                            Contact: {userDetails.contact} <br />\r\n                            role: {userDetails.role === 1 ? \"SuperUser\" : userDetails.role === 2 ? \"Admin\" : \"User\"}\r\n                        </Typography>\r\n                        <Divider /><br/>\r\n                        <Typography variant=\"body2\">\r\n                            Gender: {userDetails.gender === 1 ? \"Male\" : \"Female\"}<br />\r\n                            Salary: {userDetails.salary}\r\n                        </Typography>\r\n                    </Box>\r\n                </Stack>\r\n            </Box>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.userDetail }\r\n}\r\n\r\nUserDetail = connect(mapStateToProps)(UserDetail);","import { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/StaticDatePicker';\r\nimport { IconButton, TextField, Button, Stack, Divider } from '@mui/material';\r\nimport { KeyboardReturn } from '@mui/icons-material';\r\nimport Message from '../../component/Message';\r\nimport { postRequest, patchRequest } from '../../features/request/requestSlice';\r\n\r\n\r\nconst RequestForm = (props) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { method } = props.location.state\r\n    const existingRequest = history.location.state.requestData;\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messageVisibility, setMessageVisibility] = useState('none');\r\n    const [messageSeverity, setMessageSeverity] = useState(\"info\");\r\n    const [from, setFrom] = useState(existingRequest ? new Date(existingRequest.from) : new Date());\r\n    const [to, setTo] = useState(existingRequest ? new Date(existingRequest.to) : new Date());\r\n    const [remarks, setRemarks] = useState(existingRequest ? existingRequest.remarks : \"\");\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const payload = {\r\n            data:{from,\r\n            to,\r\n            remarks},\r\n            requestId: existingRequest ? existingRequest.id : null\r\n        }\r\n        method === \"post\" ?\r\n            dispatch(postRequest(payload.data))\r\n                .unwrap()\r\n                .then(promiseResult => {\r\n                    const [result, error] = promiseResult\r\n                    promiseHandler(error);\r\n\r\n                })\r\n            :\r\n            dispatch(patchRequest(payload))\r\n                .unwrap()\r\n                .then(promiseResult => {\r\n                    const [result, error] = promiseResult\r\n                    promiseHandler(error);\r\n\r\n                })\r\n    }\r\n\r\n    const promiseHandler = (error) => {\r\n        if (!error) {\r\n\r\n            setMessage(\"Request Sent\")\r\n            setMessageSeverity(\"success\")\r\n            setMessageVisibility(\"flex\")\r\n\r\n\r\n        } else if(error.data.message) {\r\n\r\n            setMessage(\"oops!! Something Went Wrong, Cannot request leave\")\r\n            setMessageSeverity(\"warning\")\r\n            setMessageVisibility(\"flex\")\r\n\r\n        } else {\r\n            setMessage(\"cannot update current request\")\r\n            setMessageSeverity(\"warning\")\r\n            setMessageVisibility(\"flex\")\r\n        }\r\n        setTimeout(() => {\r\n            setMessage(\"\")\r\n            setMessageSeverity(\"info\")\r\n            setMessageVisibility(\"none\")\r\n        }, 5000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconButton onClick={() => history.push('/requests')}>\r\n                <KeyboardReturn />\r\n            </IconButton>\r\n            <Message values={{\r\n                severity: messageSeverity,\r\n                title: message, message: \"\"\r\n            }}\r\n                display={messageVisibility} />\r\n            <form onSubmit={(event) => {\r\n                handleSubmit(event);\r\n            }}>\r\n                <Stack direction=\"row\" sx={{\r\n                    padding: 4\r\n                }}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DatePicker\r\n                            label=\"From\"\r\n                            value={from}\r\n                            onChange={(newValue) => {\r\n                                setFrom(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DatePicker\r\n                            label=\"To\"\r\n                            value={to}\r\n                            onChange={(newValue) => {\r\n                                setTo(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Stack>\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    id=\"remarks\"\r\n                    name=\"Remarks\"\r\n                    label=\"Reason\"\r\n                    value={remarks}\r\n                    multiline\r\n                    rows=\"5\"\r\n                    onChange={(event) => {\r\n                        setRemarks(event.target.value);\r\n                    }}\r\n                    sx={{\r\n                        mx: 4,\r\n                        width: 0.5\r\n                    }}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    sx={{\r\n                        m: 2\r\n                    }}\r\n                >\r\n                    Send\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default RequestForm;\r\n","import { Box, Typography, Divider, IconButton,  } from '@mui/material'\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getRequest } from '../../features/request/requestSlice';\r\nimport { KeyboardReturn } from '@mui/icons-material';\r\n\r\n\r\nexport default class RequestView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.requestId = this.props.match.params.id;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(getRequest(this.requestId))\r\n        .unwrap()\r\n        .then(promiseResult=>{\r\n            const [result, error]= promiseResult;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const requestDetail = this.props.request.requestResult\r\n        return (\r\n            <Box sx={{\r\n                p:3,\r\n                lineHeight: \"20px\",\r\n                maxWidth: \"30vw\"\r\n            }}>\r\n                <IconButton\r\n                    sx={{mb: 5}}\r\n                    onClick={() => this.props.history.goBack()}>\r\n                    <KeyboardReturn />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">\r\n                    ID: {requestDetail.id} <br />\r\n                </Typography>\r\n                <Divider /><br/>\r\n                <Typography variant=\"body1\">\r\n                    From: {requestDetail.from} <br />\r\n                    To: {requestDetail.to} <br />\r\n                    Reson: {requestDetail.remarks}\r\n                </Typography>\r\n                <Divider /><br/>\r\n                <Typography variant=\"body2\">\r\n                    Approval Status: {requestDetail.approval_status ? requestDetail.approval_status : \"Pending\"}<br />\r\n                    Approved By: {requestDetail.approved_by ? \"Super Admin\" : \"---\"}\r\n                </Typography>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {request: state.request};\r\n}\r\n\r\nRequestView = connect(mapStateToProps)(RequestView);","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axiosInstance } from \"../../config/axios.config\";\r\n\r\nexport const postEmail = createAsyncThunk(\r\n    'post/email',\r\n    async (payload, rejectWithValue) => {\r\n        try {\r\n            const url = \"/forgot_password\";\r\n            const result = await axiosInstance.post(url, payload);\r\n            return [result.data, null]\r\n        } catch (error) {\r\n            const err = error.response.data;\r\n            return ([null, err])\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const patchPassword = createAsyncThunk(\r\n    'patch/password',\r\n    async (payload, { rejectWithValue }) => {\r\n        try {\r\n            const url = \"reset_password\";\r\n            const result = await axiosInstance.post(url, payload);\r\n            return [result, null]\r\n        }\r\n        catch (error) {\r\n            const err = error.response.data;\r\n            return ([null, err])\r\n        }\r\n    }\r\n)\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    result: {},\r\n    error: {}\r\n}\r\n\r\nconst ForgotPasswordSlice = createSlice({\r\n    initialState,\r\n    name: \"resetPassword\",\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [postEmail.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [postEmail.fulfilled]: (state, action) => {\r\n            const [result, error] = action.payload;\r\n            state.loading = false;\r\n            if (error) {\r\n                state.error = error;\r\n            } else {\r\n                state.result = result;\r\n            }\r\n        },\r\n        [postEmail.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n        [patchPassword.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [patchPassword.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            const [result, error] = action.payload;\r\n            if (error) {\r\n                state.error = error;\r\n            } else {\r\n                state.result = result;\r\n            }\r\n        },\r\n        [patchPassword.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst { reducer } = ForgotPasswordSlice;\r\nexport default reducer;","import { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box, Container, Paper, Stack, Button, TextField, Typography } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport Header from '../../component/Header';\r\nimport { useState } from 'react';\r\nimport Message from '../../component/Message';\r\nimport { postEmail } from '../../features/resetPassword/resetPasswordSlice';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n});\r\n\r\nconst ForgotPasswordPage = (props) => {\r\n    const [messageVisibility, setMessageVisibility] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messageSeverity, setMessageSeverity] = useState(\"info\");\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(postEmail({...values}))\r\n            .unwrap()\r\n            .then(promiseResult => {\r\n                const [result, error] = promiseResult;\r\n                if(!error){\r\n                    setMessage(result.message)\r\n                    setMessageVisibility(true);\r\n                    props.history.push('/resetPassword')\r\n                }else{\r\n                    setMessageSeverity(\"error\")\r\n                    setMessage(error.message)\r\n                    setMessageVisibility(true);\r\n                }\r\n                setTimeout(()=> {\r\n                    setMessageSeverity(\"info\");\r\n                    setMessageVisibility(false);\r\n                    setMessage(\"\");\r\n                }, 5000)\r\n            })\r\n        },\r\n    });\r\n\r\n\r\n    return (\r\n        <Box sx={{ height: \"100vh\" }}>\r\n            <Header />\r\n            <Message values={{ severity: messageSeverity, title: \"\", message: message }} display={messageVisibility ? \"flex\" : \"none\"} />\r\n            <Container\r\n                maxWidth=\"xs\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItem: \"center\",\r\n                    mt: 10\r\n                }}>\r\n                <Paper elevation={2} sx={{ p: 5 }}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <Stack direction=\"column\" spacing={3} alignItems=\"center\">\r\n                            <Typography variant=\"body1\">\r\n                                Please Enter your email to search your account.\r\n                            </Typography>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n\r\n                            <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                margin=\"normal\"\r\n                                size=\"medium\"\r\n                                sx={{\r\n                                    m: \"0 auto\",\r\n                                }}\r\n                                >\r\n                                Continue\r\n                            </Button>\r\n                        </Stack>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\nexport default ForgotPasswordPage;","import { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box, Container, Paper, Stack, Button, TextField } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport Header from '../../component/Header';\r\nimport { useState } from 'react';\r\nimport Message from '../../component/Message';\r\nimport { patchPassword } from '../../features/resetPassword/resetPasswordSlice';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  token: yup\r\n    .string('Enter your token')\r\n    .required('token is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\nconst ResetPasswordPage = (props) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageSeverity, setMessageSeverity] = useState(\"info\");\r\n  const [messageVisibility, setMessageVisibility] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      token: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      dispatch(patchPassword({ ...values }))\r\n        .unwrap()\r\n        .then(promiseResult => {\r\n          const [result, error] = promiseResult;\r\n          if (!error) {\r\n            setMessage(result.message)\r\n            setMessageVisibility(true);\r\n            props.history.push('/resetPassword')\r\n          } else {\r\n            setMessageSeverity(\"error\")\r\n            setMessage(error.message)\r\n            setMessageVisibility(true);\r\n          }\r\n          setTimeout(() => {\r\n            setMessageSeverity(\"info\");\r\n            setMessageVisibility(false);\r\n            setMessage(\"\");\r\n          }, 5000)\r\n        })\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <Box sx={{ height: \"100vh\" }}>\r\n      <Header />\r\n      <Message values={{ severity: messageSeverity, title: \"\", message: message }} display={messageVisibility ? \"flex\" : \"none\"} />\r\n      <Container\r\n        maxWidth=\"xs\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItem: \"center\",\r\n          mt: 10\r\n        }}>\r\n        <Paper elevation={2} sx={{ p: 5 }}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Stack direction=\"column\" spacing={3} alignItems=\"center\">\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"token\"\r\n                name=\"token\"\r\n                label=\"token\"\r\n                value={formik.values.token}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.token && Boolean(formik.errors.token)}\r\n                helperText={formik.touched.token && formik.errors.token}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                margin=\"normal\"\r\n                size=\"medium\"\r\n                sx={{\r\n                  m: \"0 auto\",\r\n                }}>\r\n                Reset Your Password\r\n              </Button>\r\n\r\n            </Stack>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default ResetPasswordPage;","import React from 'react';\nimport { Box } from '@mui/material';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport './App.css';\nimport LoginPage from \"./pages/authPages/LoginPage\"\nimport ProtectedRoute from './component/ProtectedRoute';\nimport { theme } from './utils/theme';\nimport AdminUserDetail from './pages/adminPages/UserDetail';\nimport AdminAttendance from './pages/adminPages/Attendance'\nimport AdminDashBoard from './pages/adminPages/Dashboard'\nimport AdminLeave from './pages/adminPages/Requests'\nimport AdminEmployees from './pages/adminPages/Employees'\nimport AdminUserForm from './pages/adminPages/UserForm'\nimport AdminRequestView from './pages/adminPages/RequestView';\nimport AdminHolidayPage from './features/holiday/HolidayList';\nimport AdminHolidayForm from './features/holiday/AddHoliday';\n\n\nimport UserDashBoard from './pages/userPages/Dashboard'\nimport UserAttendance from './pages/userPages/Attendance'\nimport UserLeave from './pages/userPages/Requests'\nimport UserProfile from './pages/userPages/UserProfile'\nimport RequestForm from './pages/userPages/RequestForm'\nimport UserRequestView from './pages/userPages/RequestView';\n\nimport ForgotPasswordPage from './pages/authPages/ForgotPasswordPage';\nimport ResetPasswordPage from './pages/authPages/ResetPasswordPage';\nimport Notfound from './pages/pages/Notfound';\n\n\nfunction App() {\n  const state = useSelector(state => state.userDetail)\n  const changeView = (user, admin) => {\n    const role = state.currentUserData.role\n    return role <= 2 ? admin : user;\n  }\n\n  return (\n    <Router>\n      <Box sx={{ bgcolor: theme.palette.light.main }}>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/forgot-password\" component={ForgotPasswordPage} />\n          <Route exact path=\"/resetPassword\" component={ResetPasswordPage} />\n\n          <ProtectedRoute exact path='/' component={changeView(UserDashBoard, AdminDashBoard)} />\n          <ProtectedRoute exact path='/dashboard' component={changeView(UserDashBoard, AdminDashBoard)} />\n          <ProtectedRoute exact path={`/users/:id`} component={AdminUserDetail} />\n          <ProtectedRoute exact path=\"/userprofile\" component={UserProfile}/>\n          <ProtectedRoute exact path={`/newUser`} component={AdminUserForm} />\n          <ProtectedRoute exact path={`/users/edit/:id`} component={AdminUserForm} />\n          <ProtectedRoute exact path={`/attendance`} component={changeView(UserAttendance, AdminAttendance)} />\n          <ProtectedRoute exact path={`/employees`} component={AdminEmployees} />\n          <ProtectedRoute exact path={`/requests`} component={changeView(UserLeave, AdminLeave)} />\n          <ProtectedRoute exact path={`/newRequest`} component={RequestForm} />\n          <ProtectedRoute exact path={`/editRequest/:id`} component={RequestForm} />\n          <ProtectedRoute exact path={`/requests/:id`} component={changeView(UserRequestView, AdminRequestView)} />\n          <ProtectedRoute exact path={`/holidays`} component={AdminHolidayPage} />\n          <ProtectedRoute exact path={`/newHoliday`} component={AdminHolidayForm} />\n          <ProtectedRoute exact path={`/holiday/edit/:id`} component={AdminHolidayForm} />\n\n          <Route path=\"*\" component={Notfound} />\n        </Switch>\n      </Box>\n    </Router >\n  )\n}\n\n\n\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from '../features/auth/authSlice'\nimport allUserReducer from '../features/allUser/allUserSlice'\nimport userDetailReducer from '../features/user/userDetailSlice'\nimport resetPasswordReducer from '../features/resetPassword/resetPasswordSlice'\nimport attendanceReducer from '../features/attendance/attendanceSlice';\nimport requestReducer from '../features/request/requestSlice'\nimport holidayReducer from '../features/holiday/holidaySlice'\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    allUser: allUserReducer,\n    userDetail: userDetailReducer,\n    resetPassword: resetPasswordReducer,\n    attendance: attendanceReducer,\n    request: requestReducer,\n    holiday: holidayReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './utils/theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}